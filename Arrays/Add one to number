/*Given a non-negative number represented as an array of digits,

add 1 to the number ( increment the number represented by the digits ).

The digits are stored such that the most significant digit is at the head of the list.

Example:

If the vector has [1, 2, 3]

the returned vector should be [1, 2, 4]

as 123 + 1 = 124.
*/

vector<int> Solution::plusOne(vector<int> &A) {
    int i, n=A.size();
    i=n-1;
    while(i>=0){
        if(A[i]==9 &&(i!=0)){
            A[i]=0;
            i--;
        }
        
        else if(A[i]==9){
            A[i]=0;
            auto it = A.insert(A.begin(), 1);
             if(A[0]==0 && A.size()>1)
        {   auto it=A.begin();
            A.erase(it);
        }
            return A;
        }
        else{
            A[i]=A[i]+1;
             if(A[0]==0 && A.size()>1)
        {   auto it=A.begin();
            A.erase(it);
        }
            return A;
            }
    }
